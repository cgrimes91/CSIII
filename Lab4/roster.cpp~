// vector and list algorithms
// Chris Grimes
// 9/21/20 

#include <fstream>
#include <iostream>
#include <vector>
#include <list>
#include <string>
#include <cstdlib>

using std::ifstream;
using std::string; using std::getline;
using std::list; using std::vector;
using std::cout; using std::endl;
using std::move;

// reading a list from a fileName
void readRoster(list<string>& roster, string fileName);  

// printing a list out
void printRoster(const list<string>& roster); 

int main(int argc, char* argv[]){

   if (argc <= 1){ 
      cout << "usage: " << argv[0] 
      << " list of courses, dropouts last" 
      << endl; exit(1);
   }

   // vector of courses of students
   vector <list<string>> courseStudents; 

   for(int i=1; i < argc-1; ++i){
      list<string> roster;
      readRoster(roster, argv[i]);  
      //cout << "\n\n" << argv[i] << "\n";  
      //printRoster(roster);
      courseStudents.push_back(move(roster)); 
   }

   ///

   list<string> allStudents;
   for(auto& lst: courseStudents)
     allStudents.splice(allStudents.end(), lst);

   allStudents.sort();
   allStudents.unique();
   
   ///

   

   
   for(list<string>::iterator b= allStudents.begin(); b != allStudents.end(); ++b){//iterates through the lists in vector a
       *b+= " :";
       for(int j=1; j < argc-1; ++j){//checks each input file for names
	 ifstream course(argv[j]);
	 string first, last;
	 while(course >>first >>last){//while not eof
	   std::size_t whiteSpace=b->find_first_of(" ");//find students first name
	   string testFirst=b->substr(0, whiteSpace);
	   std::size_t whiteSpace2nd=b->find_first_of(" ", whiteSpace+1);//find students last name
	   string testSecond=b->substr(whiteSpace+1, (whiteSpace2nd-whiteSpace)-1);
	   string testFullName= testFirst + " " +testSecond;
	   string fname=argv[j];
	   fname=fname.substr(0, 3);//file name loses .txt
	   if(testFullName == (first+ " " +last)){
	     *b=*b+ " ";
	     *b=*b+ fname;
	   }
	 }
	 course.close();
       }
     } 
   
   cout << "\n\nAll Students \nlast first name, last name: courses enrolled \n";
   printRoster(allStudents);
}

// reading in a file of names into a list of strings
void readRoster(list<string>& roster, string fileName){
   ifstream course(fileName);    
   string first, last;
   while(course >> first >> last)
      roster.push_back(move(first + ' ' + last));
   course.close();
}

// printing a list out
void printRoster(const list<string>& roster){
   for(const auto& str : roster)
      cout << str << endl;
}
